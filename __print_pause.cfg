#####################################################################
# 	pause/resume enablement
#####################################################################

[gcode_macro _info_print_printer]
gcode:

# https://www.klipper3d.org/Config_Reference.html#pause_resume
# https://www.klipper3d.org/G-Codes.html#pause_resume

#####################################################################
# 	pause_alarm stuffs
#####################################################################

[delayed_gcode pause_alarm]
# provides a repeating alarm to alert on a pause (can get here from filament sensors)
initial_duration: 0
gcode:

	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_start function=pause_alarm func_params='"{rawparams|string}"'  {% endif %}

#	_PrintLED_Off
	M300 P100 S3000
	M300 P100 S3000
	M300 P100 S3000
#	_PrintLED_On
	# going to consider self silencing after XX minutes, amybe with a sms or telegram bot notification
	# to give operator a chance to intercede and keep the bed warm.  need to flesh this out moar.
	UPDATE_DELAYED_GCODE ID=pause_alarm DURATION=30 # recurse in 30 seconds

	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_end function=pause_alarm {% endif %}

#--------------------------------------------------------------------

[gcode_macro start_pause_alarm]
gcode:

	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_start function=start_pause_alarm func_params='"{rawparams|string}"'  {% endif %}

	UPDATE_DELAYED_GCODE ID=pause_alarm DURATION=1					# start a recursive pause alarm

	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_end function=start_pause_alarm {% endif %}

#--------------------------------------------------------------------

[gcode_macro stop_pause_alarm]
gcode:

	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_start function=stop_pause_alarm func_params='"{rawparams|string}"'  {% endif %}

	UPDATE_DELAYED_GCODE ID=pause_alarm DURATION=0					# stop the recursive pause alarm

	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_end function=stop_pause_alarm {% endif %}

#--------------------------------------------------------------------

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
variable_prepause_z: 118		# conservative
gcode:
  {% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_start function=PAUSE func_params='"{rawparams|string}"'  {% endif %}

  {% set prepause_z = printer.toolhead.position.z|float %}

  PAUSE_BASE
    
  _TOOLHEAD_PARK_PAUSE
  snd_PrintPause
  start_pause_alarm

	SET_PIN PIN=_PWR_SW_LED VALUE=0.1
    
	M118 PAUSE @ {printer.virtual_sdcard.file_position} - {(printer.virtual_sdcard.progress*100)|round(2,'common')}%: X{printer.toolhead.position.x|round(3,'common')} Y{printer.toolhead.position.y|round(3,'common')} Z{printer.toolhead.position.z|round(3,'common')}

	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_end function=PAUSE {% endif %}

#--------------------------------------------------------------------

[gcode_macro _TOOLHEAD_PARK_PAUSE]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_start function=_TOOLHEAD_PARK_PAUSE func_params='"{rawparams|string}"'  {% endif %}

  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

	{% if printer["gcode_macro _printer_vars"].ptr_verb_codeflow %} _proc_end function=_TOOLHEAD_PARK_PAUSE {% endif %}

